@page "/search"
@using DataEntities
@using Store.Services
@inject ProductService ProductService
@inject IConfiguration Configuration
@attribute [StreamRendering(true)]

<PageTitle>Search Products</PageTitle>

<h1>Search Products</h1>

<p>Use AI to search some of our amazing outdoor products that you can purchase.</p>

<!-- add a label , a textbox and a button to perform a smart search -->
<div class="form-group">
    <label for="search">Search:</label>
    <input type="text" id="search" class="form-control" @bind="searchTerm" />
    <button class="btn btn-primary" @onclick="SearchWithAI">Search</button>
</div>


@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <!-- Simulating images being hosted on a CDN -->
                    <td><img height="80" width="80" src="https://raw.githubusercontent.com/MicrosoftDocs/mslearn-dotnet-cloudnative/main/dotnet-docker/Products/wwwroot/images/@product.ImageUrl" /></td>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product>? products;

    private string searchTerm;
    private string aiResponse;

    private async Task SearchWithAI(MouseEventArgs e)
    {
        await Task.Delay(500);
        aiResponse = await ProductService.AISearch(searchTerm);
    }
}
